---
name: Build and Deploy PR Previews

concurrency:
  group: preview-${{ github.head_ref || github.event.client_payload.pr_number || github.run_id }}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
  repository_dispatch:
    types: [deploy-preview]

jobs:
  preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rocky-linux/docs-builder:latest
    environment: preview
    if: github.event.action != 'closed'
    steps:
      - name: Set preview variables
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "PR_NUMBER=${{ github.event.client_payload.pr_number }}" >> $GITHUB_OUTPUT
            echo "DOCS_REF=${{ github.event.client_payload.docs_ref || 'main' }}" >> $GITHUB_OUTPUT
            echo "COLLECTION_NAME=pr-${{ github.event.client_payload.pr_number }}" >> $GITHUB_OUTPUT
            echo "CLEANUP=false" >> $GITHUB_OUTPUT
          else
            echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_OUTPUT
            echo "DOCS_REF=main" >> $GITHUB_OUTPUT
            echo "COLLECTION_NAME=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT
            echo "CLEANUP=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout mkdocs config
        uses: actions/checkout@v4

      - name: Build Documentation
        id: build-docs
        uses: ./.github/actions/build-docs
        with:
          docs-ref: ${{ steps.vars.outputs.DOCS_REF }}
          cache-suffix: preview

      - name: Install Dependencies
        run: npm install
        working-directory: ./compute-js

      - name: Cache fastly compute package
        id: restore-fastly-cache
        uses: actions/cache@v4
        with:
          path: compute-js/pkg/*.tar.gz
          key: cache-fastly-preview-${{ steps.build-docs.outputs.docs-sha }}

      - name: Build Compute Package
        if: steps.restore-fastly-cache.outputs.cache-hit != 'true'
        run: npm run build
        working-directory: ./compute-js
        env:
          FASTLY_API_TOKEN: ${{ secrets.FASTLY_API_TOKEN }}

      - name: Deploy Preview Collection
        run: |
          echo "üöÄ Deploying preview for PR #${{ steps.vars.outputs.PR_NUMBER }}..."
          npx @fastly/compute-js-static-publish publish-content \
            --collection-name=${{ steps.vars.outputs.COLLECTION_NAME }} \
            --expires-in=7d \
            --config=./publish-content.config.js
        working-directory: ./compute-js
        env:
          FASTLY_API_TOKEN: ${{ secrets.FASTLY_API_TOKEN }}

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const collection = '${{ steps.vars.outputs.COLLECTION_NAME }}';
            const body = `üöÄ **Preview deployed!**
            
            üìÑ Collection: \`${collection}\`
            ‚è∞ Expires: 7 days
            üîó Access via your configured preview domain/collection selector
            
            _Preview will update automatically on new commits._`;
            
            // Find existing preview comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.data.find(c => 
              c.user.login === 'github-actions[bot]' && c.body.includes('Preview deployed!')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

      - name: Output preview info
        run: |
          echo "üöÄ Preview deployment completed!"
          echo "üìÑ Collection: ${{ steps.vars.outputs.COLLECTION_NAME }}"
          echo "‚è∞ Expires: 7 days"
          echo "üîó Access via your configured preview domain/collection selector"

  cleanup:
    name: Cleanup Preview
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rocky-linux/docs-builder:latest
    environment: preview
    if: github.event.action == 'closed'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm install
        working-directory: ./compute-js

      - name: Delete Preview Collection
        run: |
          echo "üßπ Cleaning up preview for PR #${{ github.event.number }}..."
          npx @fastly/compute-js-static-publish collections delete \
            --collection-name=pr-${{ github.event.number }} || true
        working-directory: ./compute-js
        env:
          FASTLY_API_TOKEN: ${{ secrets.FASTLY_API_TOKEN }}

      - name: Comment cleanup on PR
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `üßπ **Preview cleaned up**
              
              Collection \`pr-${{ github.event.number }}\` has been deleted.`
            });